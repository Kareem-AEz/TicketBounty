// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ------------------------------
// Users
// ------------------------------

model User {
  id            String        @id @default(cuid())
  createdAt     DateTime      @default(now()) @db.Timestamptz
  updatedAt     DateTime      @updatedAt @db.Timestamptz

  email         String        @unique
  username      String        @unique
  passwordHash  String
  sessions      Session[]
  tickets       Ticket[]
}

model Session {
  id            String        @id
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  expiresAt     DateTime      @db.Timestamptz

  @@index([userId])
}

// ------------------------------
// Tickets
// ------------------------------

model Ticket {
  id            String        @id @default(cuid())
  createdAt     DateTime      @default(now()) @db.Timestamptz
  updatedAt     DateTime      @updatedAt @db.Timestamptz

  title         String
  content       String        @db.Text
  status        TicketStatus  @default(OPEN)
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  deadline      String       
  bounty        Int

  @@index([userId])
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  DONE
}

